package test;

import java.awt.*;  
import javax.swing.*;  
import javax.swing.border.EmptyBorder;  
import java.awt.geom.RoundRectangle2D;  

public class SimpleLoginRegister extends JFrame {  

    private static final Color PRIMARY_COLOR = new Color(219, 39, 119); // pink-600  
    private static final Color BACKGROUND_COLOR = new Color(253, 242, 248); // pink-50  
    private static final Color WHITE = Color.WHITE;  

    private CardLayout cardLayout;  
    private JPanel mainPanel;  

    public static void main(String[] args) {  
        EventQueue.invokeLater(() -> {  
            try {  
                SimpleLoginRegister frame = new SimpleLoginRegister();  
                frame.setVisible(true);  
            } catch (Exception e) {  
                e.printStackTrace();  
            }  
        });  
    }  

    public SimpleLoginRegister() {  
        setTitle("Fashion Management System");  
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);  
        setPreferredSize(new Dimension(1000, 600));  

        cardLayout = new CardLayout();  
        mainPanel = new JPanel(cardLayout);  

        // Add login and register panels to the main panel  
        mainPanel.add(createLoginPanel(), "login");  
        mainPanel.add(createRegisterPanel(), "register");  
        
        add(mainPanel);  
        pack();  
        setLocationRelativeTo(null);  
        cardLayout.show(mainPanel, "login"); // Show the login panel first  
    }  

    private JPanel createLoginPanel() {  
        JPanel loginPanel = new JPanel(new GridBagLayout());  
        loginPanel.setBackground(BACKGROUND_COLOR);  

        JPanel formPanel = new JPanel(new GridBagLayout()) {  
            @Override  
            protected void paintComponent(Graphics g) {  
                super.paintComponent(g);  
                Graphics2D g2d = (Graphics2D) g;  
                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);  
                g2d.setColor(WHITE);  
                g2d.fill(new RoundRectangle2D.Float(0, 0, getWidth(), getHeight(), 20, 20));  
            }  
        };  
        formPanel.setOpaque(false);  
        formPanel.setBorder(new EmptyBorder(30, 40, 30, 40));  
        formPanel.setPreferredSize(new Dimension(400, 450));  
        
        GridBagConstraints gbc = new GridBagConstraints();  
        gbc.gridwidth = GridBagConstraints.REMAINDER;  
        gbc.fill = GridBagConstraints.HORIZONTAL;  
        gbc.insets = new Insets(5, 0, 15, 0);  
        
        JLabel titleLabel = new JLabel("Đăng nhập");  
        titleLabel.setFont(new Font("Arial", Font.BOLD, 24));  
        titleLabel.setForeground(PRIMARY_COLOR);  
        titleLabel.setHorizontalAlignment(SwingConstants.CENTER);  
        formPanel.add(titleLabel, gbc);  

        formPanel.add(new JLabel("Tên đăng nhập"), gbc);  
        formPanel.add(createStyledTextField(), gbc);  
        
        formPanel.add(new JLabel("Mật khẩu"), gbc);  
        formPanel.add(createStyledPasswordField(), gbc);  
        
        JButton loginButton = createStyledButton("Đăng nhập");  
        loginButton.addActionListener(e -> {  
            // Handle login logic or navigate to product panel  
            JOptionPane.showMessageDialog(this, "Đăng nhập thành công!");  
        });  
        formPanel.add(loginButton, gbc);  

        JPanel linkPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));  
        linkPanel.setOpaque(false);  
        linkPanel.add(new JLabel("Chưa có tài khoản? "));  
        JLabel registerLink = new JLabel("Đăng ký ngay");  
        registerLink.setForeground(PRIMARY_COLOR);  
        registerLink.setCursor(new Cursor(Cursor.HAND_CURSOR));  
        registerLink.addMouseListener(new java.awt.event.MouseAdapter() {  
            public void mouseClicked(java.awt.event.MouseEvent evt) {  
                cardLayout.show(mainPanel, "register");  
            }  
        });  
        linkPanel.add(registerLink);  
        formPanel.add(linkPanel, gbc);  
        
        loginPanel.add(formPanel);  
        return loginPanel;  
    }  

    private JPanel createRegisterPanel() {  
        JPanel registerPanel = new JPanel(new GridBagLayout());  
        registerPanel.setBackground(BACKGROUND_COLOR);  
        
        JPanel formPanel = new JPanel(new GridBagLayout()) {  
            @Override  
            protected void paintComponent(Graphics g) {  
                super.paintComponent(g);  
                Graphics2D g2d = (Graphics2D) g;  
                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);  
                g2d.setColor(WHITE);  
                g2d.fill(new RoundRectangle2D.Float(0, 0, getWidth(), getHeight(), 20, 20));  
            }  
        };  
        formPanel.setOpaque(false);  
        formPanel.setBorder(new EmptyBorder(30, 40, 30, 40));  
        formPanel.setPreferredSize(new Dimension(400, 500));  
        
        GridBagConstraints gbc = new GridBagConstraints();  
        gbc.gridwidth = GridBagConstraints.REMAINDER;  
        gbc.fill = GridBagConstraints.HORIZONTAL;  
        gbc.insets = new Insets(5, 0, 15, 0);  
        
        JLabel titleLabel = new JLabel("Đăng ký tài khoản");  
        titleLabel.setFont(new Font("Arial", Font.BOLD, 24));  
        titleLabel.setForeground(PRIMARY_COLOR);  
        titleLabel.setHorizontalAlignment(SwingConstants.CENTER);  
        formPanel.add(titleLabel, gbc);  
        
        formPanel.add(new JLabel("Tên đăng nhập"), gbc);  
        formPanel.add(createStyledTextField(), gbc);  
        
        formPanel.add(new JLabel("Email"), gbc);  
        formPanel.add(createStyledTextField(), gbc);  
        
        formPanel.add(new JLabel("Mật khẩu"), gbc);  
        formPanel.add(createStyledPasswordField(), gbc);  

        formPanel.add(new JLabel("Xác nhận mật khẩu"), gbc);  
        formPanel.add(createStyledPasswordField(), gbc);  
        
        JButton registerButton = createStyledButton("Đăng ký");  
        registerButton.addActionListener(e -> {  
            // Handle registration logic  
            JOptionPane.showMessageDialog(this, "Đăng ký thành công!");  
        });  
        formPanel.add(registerButton, gbc);  
        
        JPanel linkPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));  
        linkPanel.setOpaque(false);  
        linkPanel.add(new JLabel("Đã có tài khoản? "));  
        JLabel loginLink = new JLabel("Đăng nhập");  
        loginLink.setForeground(PRIMARY_COLOR);  
        loginLink.setCursor(new Cursor(Cursor.HAND_CURSOR));  
        loginLink.addMouseListener(new java.awt.event.MouseAdapter() {  
            public void mouseClicked(java.awt.event.MouseEvent evt) {  
                cardLayout.show(mainPanel, "login");  
            }  
        });  
        linkPanel.add(loginLink);  
        formPanel.add(linkPanel, gbc);  

        registerPanel.add(formPanel);  
        return registerPanel;  
    }  

    private JTextField createStyledTextField() {  
        JTextField field = new JTextField(20);  
        field.setPreferredSize(new Dimension(0, 35));  
        field.setBorder(BorderFactory.createCompoundBorder(  
            BorderFactory.createLineBorder(new Color(229, 231, 235)),  
            BorderFactory.createEmptyBorder(5, 10, 5, 10)  
        ));  
        return field;  
    }  

    private JPasswordField createStyledPasswordField() {  
        JPasswordField field = new JPasswordField(20);  
        field.setPreferredSize(new Dimension(0, 35));  
        field.setBorder(BorderFactory.createCompoundBorder(  
            BorderFactory.createLineBorder(new Color(229, 231, 235)),  
            BorderFactory.createEmptyBorder(5, 10, 5, 10)  
        ));  
        return field;  
    }  

    private JButton createStyledButton(String text) {  
        JButton button = new JButton(text) {  
            @Override  
            protected void paintComponent(Graphics g) {  
                Graphics2D g2 = (Graphics2D) g.create();  
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);  
                if (getModel().isPressed()) {  
                    g2.setColor(PRIMARY_COLOR.darker());  
                } else {  
                    g2.setColor(PRIMARY_COLOR);  
                }  
                g2.fill(new RoundRectangle2D.Float(0, 0, getWidth(), getHeight(), 10, 10));  
                g2.dispose();  
                
                super.paintComponent(g);  
            }  
        };  
        
        button.setForeground(WHITE);  
        button.setFont(new Font("Arial", Font.BOLD, 14));  
        button.setContentAreaFilled(false);  
        button.setBorderPainted(false);  
        button.setFocusPainted(false);  
        button.setPreferredSize(new Dimension(0, 40));  
        button.setCursor(new Cursor(Cursor.HAND_CURSOR));  
        
        return button;  
    }  
}
