package test;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.geom.RoundRectangle2D;

import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;

import com.formdev.flatlaf.fonts.roboto.FlatRobotoFont;

import gui.Form_DangNhap;

public class GiaoDienChinh extends JFrame {

    private static final long serialVersionUID = 1L;
    private JPanel contentPane;
    private static final Color PRIMARY_COLOR = new Color(219, 39, 119); // pink-600
    private static final Color HOVER_COLOR = new Color(190, 24, 93); // darker pink for hover
    private static final Color LINK_HOVER_COLOR = new Color(236, 72, 153); // lighter pink for link hover
    private JPanel submenuPanel; // Add this field

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    GiaoDienChinh frame = new GiaoDienChinh();
                    frame.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    public GiaoDienChinh() {
        setSize(new Dimension(1000, 600));
        setVisible(true);
        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());

        JPanel panelNorth = new JPanel();
        JPanel pnlTieuDe = new JPanel();
        pnlTieuDe.setBackground(new Color(255, 255, 255));
        JPanel pnlJMenu = new JPanel();
        pnlJMenu.setBackground(new Color(255, 255, 255));
        panelNorth.add(pnlTieuDe);
        panelNorth.add(pnlJMenu);
        panelNorth.setSize(new Dimension(1000, 60));
        panelNorth.setLayout(new BoxLayout(panelNorth, BoxLayout.Y_AXIS));
        pnlTieuDe.setLayout(new BorderLayout(0, 0));

        JLabel lblLogo = new JLabel("   WOMEN FASHION");
        lblLogo.setAlignmentX(Component.CENTER_ALIGNMENT);
        lblLogo.setFont(new Font(FlatRobotoFont.FAMILY, Font.BOLD, 12));
        lblLogo.setForeground(PRIMARY_COLOR);
        pnlTieuDe.add(lblLogo, BorderLayout.WEST);

        JLabel lblUser = new JLabel("Hi, User               ");
        lblUser.setIcon(new ImageIcon(GiaoDienChinh.class.getResource("/icon/circle-user.png")));
        lblUser.setFont(new java.awt.Font("Segoe UI", 0, 13));
        lblUser.setHorizontalAlignment(SwingConstants.RIGHT);

        // Create submenu panel
        submenuPanel = new JPanel();
        submenuPanel.setLayout(new BoxLayout(submenuPanel, BoxLayout.Y_AXIS));
        submenuPanel.setBackground(Color.WHITE);
        submenuPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
        submenuPanel.setVisible(false);

        // Menu Bar
        JPanel menuBar = new JPanel(new FlowLayout(FlowLayout.CENTER, 20, 5));
        menuBar.setBackground(Color.white);
        String[] menuItems = { "Trang chủ", "Sản phẩm", "Đơn hàng", "Danh mục", "Nhà cung cấp", "Nhân viên", "Thống kê" };
        for (String item : menuItems) {
            JButton menuButton = createMenuButton(item);
            menuBar.add(menuButton);
            
            // Add submenu for "Đơn hàng"
            if (item.equals("Đơn hàng")) {
                submenuPanel.add(createSubmenuButton("Đơn hàng nhập"));
                submenuPanel.add(createSubmenuButton("Đơn hàng xuất"));
                
                menuButton.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseEntered(MouseEvent e) {
                        menuButton.setForeground(PRIMARY_COLOR);
                        menuButton.setBackground(new Color(253, 242, 248));
                        showSubmenu(menuButton);
                    }

                    @Override
                    public void mouseExited(MouseEvent e) {
                        menuButton.setForeground(new Color(75, 85, 99));
                        menuButton.setBackground(Color.white);
                        // Don't hide submenu immediately to allow mouse movement to submenu
                        if (!isMouseOverSubmenu()) {
                            hideSubmenu();
                        }
                    }
                });
            }
        }

        // Add mouse listener to submenu panel
        submenuPanel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseExited(MouseEvent e) {
                if (!isMouseOverSubmenu()) {
                    hideSubmenu();
                }
            }
        });

        pnlTieuDe.add(lblUser, BorderLayout.EAST);
        pnlJMenu.add(menuBar);
        pnlJMenu.add(submenuPanel); // Add submenu panel to the menu

        JPanel panelCenter = new JPanel();
        panelCenter.setLayout(new BorderLayout());

        // Rotating Banner
        JPanel bannerPanel = new JPanel() {
            @Override
            protected void paintComponent(java.awt.Graphics g) {
                super.paintComponent(g);
                java.awt.Graphics2D g2d = (java.awt.Graphics2D) g;
                g2d.setRenderingHint(java.awt.RenderingHints.KEY_ANTIALIASING, java.awt.RenderingHints.VALUE_ANTIALIAS_ON);
                g2d.setColor(getBackground());
                g2d.fill(new RoundRectangle2D.Double(0, 0, getWidth() - 1, getHeight() - 1, 20, 20));
            }
        };
        bannerPanel.setPreferredSize(new Dimension(1000, 300));
        bannerPanel.setBackground(new Color(253, 242, 248));
        panelCenter.add(bannerPanel, BorderLayout.NORTH);

        // Placeholder for rotating banner images
        JLabel[] bannerImages = new JLabel[3];
        for (int i = 0; i < bannerImages.length; i++) {
            bannerImages[i] = new JLabel("Banner " + (i + 1));
            bannerImages[i].setHorizontalAlignment(SwingConstants.CENTER);
            bannerImages[i].setVerticalAlignment(SwingConstants.CENTER);
            bannerImages[i].setFont(new Font("Arial", Font.BOLD, 36));
            bannerImages[i].setForeground(PRIMARY_COLOR);
        }
        rotatingBanner(bannerPanel, bannerImages, 5000);

        panel.add(panelNorth, BorderLayout.NORTH);
        panel.add(panelCenter, BorderLayout.CENTER);
        getContentPane().add(panel);
    }

    private JButton createMenuButton(String text) {
        JButton button = new JButton(text) {
            @Override
            protected void paintComponent(java.awt.Graphics g) {
                java.awt.Graphics2D g2d = (java.awt.Graphics2D) g.create();
                g2d.setRenderingHint(java.awt.RenderingHints.KEY_ANTIALIASING, java.awt.RenderingHints.VALUE_ANTIALIAS_ON);
                g2d.setColor(getBackground());
                g2d.fill(new RoundRectangle2D.Double(0, 0, getWidth() - 1, getHeight() - 1, 20, 20));
                g2d.dispose();
                super.paintComponent(g);
            }
        };
        button.setForeground(new Color(75, 85, 99));
        button.setBackground(Color.white);
        button.setBorderPainted(false);
        button.setFocusPainted(false);
        button.setContentAreaFilled(false);
        button.setCursor(new Cursor(Cursor.HAND_CURSOR));
        button.setPreferredSize(new Dimension(120, 50));

        // Add icon for menu items
        switch (text) {
            case "Trang chủ":
                button.setIcon(new ImageIcon(GiaoDienChinh.class.getResource("/icon/house.png")));
                break;
            case "Sản phẩm":
                button.setIcon(new ImageIcon(GiaoDienChinh.class.getResource("/icon/shirt.png")));
                break;
            case "Đơn hàng":
                button.setIcon(new ImageIcon(GiaoDienChinh.class.getResource("/icon/shopping-bag.png")));
                break;
            case "Danh mục":
                button.setIcon(new ImageIcon(GiaoDienChinh.class.getResource("/icon/chart-column-stacked.png")));
                break;
            case "Nhà cung cấp":
                button.setIcon(new ImageIcon(GiaoDienChinh.class.getResource("/icon/container.png")));
                break;
            case "Nhân viên":
                button.setIcon(new ImageIcon(GiaoDienChinh.class.getResource("/icon/users.png")));
                break;
            case "Thống kê":
                button.setIcon(new ImageIcon(GiaoDienChinh.class.getResource("/icon/chart-no-axes-combined.png")));
                break;
        }

        return button;
    }

    private JButton createSubmenuButton(String text) {
        JButton button = new JButton(text);
        button.setPreferredSize(new Dimension(120, 30));
        button.setMaximumSize(new Dimension(120, 30));
        button.setBackground(Color.WHITE);
        button.setForeground(new Color(75, 85, 99));
        button.setBorderPainted(false);
        button.setFocusPainted(false);
        button.setCursor(new Cursor(Cursor.HAND_CURSOR));
        
        button.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                button.setBackground(new Color(253, 242, 248));
                button.setForeground(PRIMARY_COLOR);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                button.setBackground(Color.WHITE);
                button.setForeground(new Color(75, 85, 99));
            }
        });
        
        return button;
    }

    private void showSubmenu(JButton parentButton) {
        submenuPanel.setVisible(true);
        submenuPanel.setLocation(parentButton.getLocationOnScreen().x,
                parentButton.getLocationOnScreen().y + parentButton.getHeight());
    }

    private void hideSubmenu() {
        submenuPanel.setVisible(false);
    }

    private boolean isMouseOverSubmenu() {
        if (submenuPanel.isVisible()) {
            java.awt.Point mousePoint = submenuPanel.getMousePosition(true);
            return mousePoint != null &&
                   mousePoint.x >= 0 &&
                   mousePoint.x <= submenuPanel.getWidth() &&
                   mousePoint.y >= 0 &&
                   mousePoint.y <= submenuPanel.getHeight();
        }
        return false;
    }

    private void rotatingBanner(JPanel bannerPanel, JLabel[] bannerImages, int delay) {
        java.util.Timer timer = new java.util.Timer();
        timer.schedule(new java.util.TimerTask() {
            private int currentIndex = 0;

            @Override
            public void run() {
                bannerPanel.removeAll();
                bannerPanel.add(bannerImages[currentIndex], BorderLayout.CENTER);
                bannerPanel.revalidate();
                bannerPanel.repaint();
                currentIndex = (currentIndex + 1) % bannerImages.length;
            }
        }, 0, delay);
    }
}