package gui;

import java.awt.*;
import java.awt.event.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.*;
import javax.swing.border.*;
import javax.swing.plaf.basic.*;
import javax.swing.table.*;
import com.formdev.flatlaf.fonts.roboto.FlatRobotoFont;
import com.toedter.calendar.JDateChooser;

import dialog.SuaNhanVienDialog;
import dialog.ThemNhanVienDialog;
import style.CustomScrollBarUI;
import style.StyleTabbedPane;
public class Form_NhanVien extends JPanel {
	private static final Color PRIMARY_COLOR = new Color(219, 39, 119);
    private static final Color HOVER_COLOR = new Color(252, 231, 243);
    private static final Font HEADER_FONT = new Font("Arial", Font.BOLD, 12);
    private static final Font CONTENT_FONT = new Font("Arial", Font.PLAIN, 12);
    
    private JTable table;
    private DefaultTableModel tableModel;
    private int selectedRow = -1;

    public Form_NhanVien() {
        setLayout(new BorderLayout());
        setBackground(Color.WHITE);
        initComponents();
    }

    private void initComponents() {
        // Top Controls
        JPanel topControls = createTopControlsPanel();
        add(topControls, BorderLayout.NORTH);

        // Table
        JPanel tablePanel = createTablePanel();
        add(tablePanel, BorderLayout.CENTER);
    }

    private JPanel createTopControlsPanel() {
        JPanel topControls = new JPanel(new BorderLayout(20, 0));
        topControls.setBackground(Color.WHITE);
        topControls.setBorder(new EmptyBorder(20, 30, 20, 30));

        // Search panel
        JPanel searchPanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 10, 0));
        searchPanel.setBackground(Color.WHITE);
        
        JTextField searchField = new JTextField(20);
        searchField.setPreferredSize(new Dimension(200, 38));
        searchField.setFont(CONTENT_FONT);
        
        JButton searchBtn = new JButton(new ImageIcon(getClass().getResource("/icon/search.png")));
        searchBtn.setPreferredSize(new Dimension(38, 38));
        
        searchPanel.add(searchField);
        searchPanel.add(searchBtn);

        // Action buttons
        JPanel actionPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT, 10, 0));
        actionPanel.setBackground(Color.WHITE);
        
        String[] buttonLabels = {"Thêm nhân viên", "Sửa", "Xóa", "About", "Xuất Excel"};
        String[] iconPaths = {"/icon/circle-plus.png", "/icon/pencil.png", "/icon/trash.png", 
                             "/icon/info.png", "/icon/printer.png"};
        
        for (int i = 0; i < buttonLabels.length; i++) {
            JButton button = createActionButton(buttonLabels[i], iconPaths[i], i == 0);
            actionPanel.add(button);
        }

        topControls.add(searchPanel, BorderLayout.WEST);
        topControls.add(actionPanel, BorderLayout.EAST);
        return topControls;
    }

    private JPanel createTablePanel() {
        String[] columns = {"Mã NV", "Họ và tên", "Giới tính", "Ngày sinh", "SDT", "Email"};
        Object[][] data = {
            {"NV001", "Nguyễn Văn A", "Nam", "1990-01-01", "0123456789", "nva@email.com"},
            {"NV002", "Trần Thị B", "Nữ", "1992-02-02", "0987654321", "ttb@email.com"}
        };

        tableModel = new DefaultTableModel(data, columns) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        table = new JTable(tableModel);
        styleTable(table);

        JScrollPane scrollPane = new JScrollPane(table);
        scrollPane.getVerticalScrollBar().setUI(new CustomScrollBarUI());

        JPanel mainContent = new JPanel(new BorderLayout());
        mainContent.setBackground(Color.WHITE);
        mainContent.setBorder(new EmptyBorder(0, 30, 30, 30));
        mainContent.add(scrollPane);

        return mainContent;
    }

    private JButton createActionButton(String text, String iconPath, boolean isPrimary) {
        JButton button = new JButton(text);
        button.setFont(CONTENT_FONT);
        button.setIcon(new ImageIcon(getClass().getResource(iconPath)));
        button.setIconTextGap(10);
        button.setPreferredSize(new Dimension(text.length() > 10 ? 150 : 120, 38));
        
        if (isPrimary) {
            button.setBackground(PRIMARY_COLOR);
            button.setForeground(Color.WHITE);
        } else {
            button.setBackground(Color.WHITE);
            button.setForeground(Color.BLACK);
            styleButtonHover(button);
        }
        
        return button;
    }

    private void styleTable(JTable table) {
        table.setFont(CONTENT_FONT);
        table.setRowHeight(40);
        table.setGridColor(new Color(240, 240, 240));
        table.setSelectionBackground(HOVER_COLOR);
        
        JTableHeader header = table.getTableHeader();
        header.setFont(HEADER_FONT);
        header.setBackground(new Color(255, 240, 245));
        header.setPreferredSize(new Dimension(header.getPreferredSize().width, 40));
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        table.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        table.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
    }

    private void styleButtonHover(JButton button) {
        button.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent e) {
                if (!button.getBackground().equals(PRIMARY_COLOR)) {
                    button.setBackground(HOVER_COLOR);
                }
            }
            public void mouseExited(MouseEvent e) {
                if (!button.getBackground().equals(PRIMARY_COLOR)) {
                    button.setBackground(Color.WHITE);
                }
            }
        });
    }

}