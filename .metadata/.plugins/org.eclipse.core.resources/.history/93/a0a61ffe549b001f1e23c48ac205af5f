package gui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import javax.swing.plaf.basic.BasicScrollBarUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

import com.formdev.flatlaf.fonts.roboto.FlatRobotoFont;

public class Form_DanhMuc extends JPanel {
    

    private static final Color PRIMARY_COLOR = new Color(219, 39, 119);
    private static final Color CONTENT_COLOR = new Color(255, 192, 203);
    private static final Color HOVER_COLOR = new Color(252, 231, 243);
    private static final Font HEADER_FONT = new Font(FlatRobotoFont.FAMILY, Font.BOLD, 12);
    private static final Font CONTENT_FONT = new Font(FlatRobotoFont.FAMILY, Font.PLAIN, 12);
    private static final Font TITLE_FONT = new Font(FlatRobotoFont.FAMILY, Font.BOLD, 14);

    private int selectedRow = -1;
    private JTable table;
    private DefaultTableModel tableModel;
    private JTextField searchField;
    private JPanel rightPanel;
    private CardLayout cardLayout;
    private JPanel productsPanel;

    public Form_DanhMuc() {
        initComponents();
    }

    private void initComponents() {
        setLayout(new BorderLayout(10, 0));
        setBackground(Color.WHITE);
        setBorder(new EmptyBorder(30, 30, 30, 30));

        // Tạo panel bên trái chứa danh mục
        JPanel leftPanel = new JPanel(new BorderLayout(0, 20));
        leftPanel.setBackground(Color.WHITE);
        leftPanel.setPreferredSize(new Dimension(400, getHeight()));
        
        // Thêm các components vào left panel
        leftPanel.add(createTopPanel(), BorderLayout.NORTH);
        leftPanel.add(createTablePanel(), BorderLayout.CENTER);

        // Tạo panel bên phải để hiển thị sản phẩm
        rightPanel = new JPanel(new BorderLayout());
        rightPanel.setBackground(Color.WHITE);
        rightPanel.setBorder(BorderFactory.createLineBorder(new Color(245, 245, 245)));

        // Panel chứa tiêu đề danh mục được chọn
        JPanel titlePanel = new JPanel(new BorderLayout());
        titlePanel.setBackground(Color.WHITE);
        titlePanel.setBorder(new EmptyBorder(15, 20, 15, 20));
        JLabel titleLabel = new JLabel("Danh sách sản phẩm");
        titleLabel.setFont(TITLE_FONT);
        titlePanel.add(titleLabel, BorderLayout.WEST);

        // Panel chứa danh sách sản phẩm dạng card
        productsPanel = new JPanel();
        productsPanel.setBackground(Color.WHITE);
        productsPanel.setLayout(new GridLayout(0, 3, 20, 20));
        productsPanel.setBorder(new EmptyBorder(20, 20, 20, 20));

        JScrollPane scrollPane = new JScrollPane(productsPanel);
        scrollPane.setBorder(null);
        scrollPane.getVerticalScrollBar().setUI(new CustomScrollBarUI());
        
        rightPanel.add(titlePanel, BorderLayout.NORTH);
        rightPanel.add(scrollPane, BorderLayout.CENTER);

        // Thêm vào panel chính
        add(leftPanel, BorderLayout.WEST);
        add(rightPanel, BorderLayout.CENTER);
    }

    private JPanel createProductCard(String name, int quantity, String imagePath) {
        JPanel card = new JPanel(new BorderLayout(0, 10));
        card.setBackground(Color.WHITE);
        card.setBorder(BorderFactory.createCompoundBorder(
            new LineBorder(new Color(245, 245, 245), 1, true),
            new EmptyBorder(10, 10, 10, 10)
        ));
        card.setPreferredSize(new Dimension(200, 250));

        // Image panel
        JPanel imagePanel = new JPanel();
        imagePanel.setBackground(Color.WHITE);
        imagePanel.setPreferredSize(new Dimension(180, 180));
        JLabel imageLabel = new JLabel(new ImageIcon(getClass().getResource(imagePath)));
        imagePanel.add(imageLabel);

        // Info panel
        JPanel infoPanel = new JPanel(new GridLayout(2, 1, 5, 5));
        infoPanel.setBackground(Color.WHITE);
        
        JLabel nameLabel = new JLabel(name);
        nameLabel.setFont(new Font(FlatRobotoFont.FAMILY, Font.BOLD, 13));
        
        JLabel quantityLabel = new JLabel("Số lượng: " + quantity);
        quantityLabel.setFont(CONTENT_FONT);

        infoPanel.add(nameLabel);
        infoPanel.add(quantityLabel);

        card.add(imagePanel, BorderLayout.CENTER);
        card.add(infoPanel, BorderLayout.SOUTH);

        // Add hover effect
        card.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                card.setBackground(HOVER_COLOR);
                imagePanel.setBackground(HOVER_COLOR);
                infoPanel.setBackground(HOVER_COLOR);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                card.setBackground(Color.WHITE);
                imagePanel.setBackground(Color.WHITE);
                infoPanel.setBackground(Color.WHITE);
            }
        });

        return card;
    }

    private JPanel createTopPanel() {
        JPanel topPanel = new JPanel(new BorderLayout(20, 0));
        topPanel.setBackground(Color.WHITE);
        
        // Left components with search
        JPanel searchPanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 15, 0));
        searchPanel.setBackground(Color.WHITE);
        
        searchField = new JTextField();
        searchField.setPreferredSize(new Dimension(200, 35));
        searchField.setFont(CONTENT_FONT);
        
        JButton searchButton = createRoundedButton("", "/icon/search.png", false);
        
        searchPanel.add(searchField);
        searchPanel.add(searchButton);
        
        // Right components with add button
        JPanel actionsPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT, 15, 0));
        actionsPanel.setBackground(Color.WHITE);
        
        JButton addButton = createRoundedButton("Thêm danh mục", "/icon/circle-plus.png", true);
        addButton.setBackground(PRIMARY_COLOR);
        addButton.setForeground(Color.WHITE);
        addButton.setPreferredSize(new Dimension(160, 38));
        
        actionsPanel.add(addButton);
        
        topPanel.add(searchPanel, BorderLayout.WEST);
        topPanel.add(actionsPanel, BorderLayout.EAST);
        
        return topPanel;
    }

    private void updateProductsPanel(String category) {
        productsPanel.removeAll();
        
        // Thêm sản phẩm mẫu dựa trên danh mục
        if (category.equals("Váy")) {
            productsPanel.add(createProductCard("Váy caro cuti", 36, "/images/vay1.png"));
            productsPanel.add(createProductCard("Váy công sở", 25, "/images/vay2.png"));
            productsPanel.add(createProductCard("Váy dự tiệc", 15, "/images/vay3.png"));
        } else if (category.equals("Áo")) {
            productsPanel.add(createProductCard("Áo thun basic", 50, "/images/ao1.png"));
            productsPanel.add(createProductCard("Áo sơ mi trắng", 30, "/images/ao2.png"));
            productsPanel.add(createProductCard("Áo khoác jean", 20, "/images/ao3.png"));
        }
        // Thêm các danh mục khác tương tự
        
        productsPanel.revalidate();
        productsPanel.repaint();
    }

    private JPanel createTablePanel() {
        JPanel tablePanel = new JPanel(new BorderLayout(0, 15));
        tablePanel.setBackground(Color.WHITE);
        
        String[] columns = {"Mã DM", "Tên danh mục", "Ghi chú"};
        tableModel = new DefaultTableModel(columns, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 2;
            }
        };
        
        table = new JTable(tableModel);
        table.setFont(CONTENT_FONT);
        table.setRowHeight(32);
        table.setGridColor(new Color(245, 245, 245));
        table.setSelectionBackground(HOVER_COLOR);
        table.setSelectionForeground(Color.BLACK);
        
        // Căn giữa nội dung và điều chỉnh độ rộng cột
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        
        for (int i = 0; i < table.getColumnCount(); i++) {
            TableColumn column = table.getColumnModel().getColumn(i);
            column.setCellRenderer(centerRenderer);
            
            if (i == 0) { // Mã DM
                column.setPreferredWidth(80);
                column.setMaxWidth(80);
            }
        }
        
        // Thêm sự kiện click để hiển thị sản phẩm
        table.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                selectedRow = table.getSelectedRow();
                if (selectedRow != -1) {
                    String category = (String) table.getValueAt(selectedRow, 1);
                    updateProductsPanel(category);
                }
            }
        });

        // Header styling
        JTableHeader header = table.getTableHeader();
        header.setFont(HEADER_FONT);
        header.setBackground(Color.WHITE);
        header.setPreferredSize(new Dimension(header.getPreferredSize().width, 40));
        ((DefaultTableCellRenderer)header.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        
        // Scroll pane
        JScrollPane scrollPane = new JScrollPane(table);
        scrollPane.setBorder(BorderFactory.createLineBorder(new Color(245, 245, 245)));
        scrollPane.getVerticalScrollBar().setUI(new CustomScrollBarUI());
        
        tablePanel.add(scrollPane, BorderLayout.CENTER);
        
        // Add sample data
        addSampleData();
        
        return tablePanel;
    }

    private void addSampleData() {
        Object[][] data = {
            {"DM001", "Váy", "Các loại váy ngắn, váy dài"},
            {"DM002", "Quần", "Quần jean, quần tây, quần short"},
            {"DM003", "Áo", "Áo thun, áo sơ mi, áo khoác"},
            {"DM004", "Phụ kiện", "Túi xách, ví, dây nịt"},
            {"DM005", "Giày dép", "Giày cao gót, giày thể thao"}
        };
        
        for (Object[] row : data) {
            tableModel.addRow(row);
        }
    }
}