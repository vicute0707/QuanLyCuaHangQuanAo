package table;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;

import style.CustomScrollBarUI;

public class TBL_DM {
	 public JPanel createTablePanel() {
	        JPanel tablePanel = new JPanel(new BorderLayout(0, 15));
	        tablePanel.setBackground(Color.WHITE);
	        
	        String[] columns = {"Mã DM", "Tên danh mục", "Ghi chú"};
	        tableModel = new DefaultTableModel(columns, 0) {
	            @Override
	            public boolean isCellEditable(int row, int column) {
	                return column == 2;
	            }
	        };
	        
	        table = new JTable(tableModel);
	        table.setFont(CONTENT_FONT);
	        table.setRowHeight(32);
	        table.setGridColor(new Color(245, 245, 245));
	        table.setSelectionBackground(HOVER_COLOR);
	        table.setSelectionForeground(Color.BLACK);
	        table.setShowVerticalLines(true);
	        table.setShowHorizontalLines(true);
	        
	        // Căn giữa nội dung và điều chỉnh độ rộng cột
	        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
	        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
	        
	        for (int i = 0; i < table.getColumnCount(); i++) {
	            TableColumn column = table.getColumnModel().getColumn(i);
	            column.setCellRenderer(centerRenderer);
	            
	            switch (i) {
	                case 0: // Mã DM
	                    column.setPreferredWidth(80);
	                    column.setMaxWidth(80);
	                    column.setMinWidth(80);
	                    break;
	                case 1: // Tên danh mục
	                    column.setPreferredWidth(150);
	                    break;
	                case 2: // Ghi chú
	                    column.setPreferredWidth(200);
	                    break;
	            }
	        }
	        
	        // Thêm sự kiện click để hiển thị sản phẩm
	        table.addMouseListener(new MouseAdapter() {
	            @Override
	            public void mouseClicked(MouseEvent e) {
	                selectedRow = table.getSelectedRow();
	                if (selectedRow != -1) {
	                    String category = (String) table.getValueAt(selectedRow, 1);
	                    updateProductsPanel(category);
	                }
	            }
	        });

	        // Header styling
	        JTableHeader header = table.getTableHeader();
	        header.setFont(HEADER_FONT);
	        header.setBackground(Color.WHITE);
	        header.setForeground(Color.BLACK);
	        header.setPreferredSize(new Dimension(header.getPreferredSize().width, 40));
	        ((DefaultTableCellRenderer)header.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
	        
	        // Scroll pane
	        JScrollPane scrollPane = new JScrollPane(table);
	        scrollPane.setBorder(BorderFactory.createLineBorder(new Color(245, 245, 245)));
	        scrollPane.getVerticalScrollBar().setUI(new CustomScrollBarUI());
	        
	        tablePanel.add(scrollPane, BorderLayout.CENTER);
	        
	        // Add sample data
	        addSampleData();
	        
	        return tablePanel;
	    }

}
