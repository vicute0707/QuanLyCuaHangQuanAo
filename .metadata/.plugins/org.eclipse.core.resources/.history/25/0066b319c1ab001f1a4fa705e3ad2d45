package dao;

import entity.User;
import service.EmailService;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import connection.MyConnection;

public class DangNhap_Dao {
    private MyConnection myConnection;
    
    public DangNhap_Dao() {
        myConnection = new MyConnection();
    }
    
    public User kiemTraDangNhap(String username, String password) {
        // Query không kiểm tra password vì có thể password trong DB đã bị mã hóa khác
        String sql = "SELECT * FROM user WHERE username = ?";
        
        try (Connection conn = myConnection.connect();
             PreparedStatement pst = conn.prepareStatement(sql)) {
            
            pst.setString(1, username);
            ResultSet rs = pst.executeQuery();
            
            if (rs.next()) {
                // Lấy password từ DB ra để so sánh trực tiếp
                String dbPassword = rs.getString("password");
                
                // Nếu password khớp
                if (dbPassword.equals(password)) {
                    User user = new User();
                    user.setUserID(rs.getString("userID"));
                    user.setUsername(rs.getString("username"));
                    user.setFullName(rs.getString("fullName"));
                    user.setGender(rs.getString("gender"));
                    user.setBirthDate(rs.getDate("birthDate"));
                    user.setPhone(rs.getString("phone"));
                    user.setEmail(rs.getString("email"));
                    user.setRole(rs.getString("role"));
                    user.setStatus(rs.getString("status"));
                    
                    // Kiểm tra status
                    if (!"active".equals(user.getStatus())) {
                        return null; // Tài khoản không active
                    }
                    
                    return user;
                }
            }
            return null;
            
        } catch (SQLException e) {
            e.printStackTrace();
            return null;
        } finally {
            myConnection.closeConnection();
        }
    }
    public String layLaiMatKhau(String username, String email, String phone) {
        String sql = "SELECT * FROM user WHERE username = ? AND email = ? AND phone = ? AND status = 'active'";
        
        try (Connection conn = myConnection.connect();
             PreparedStatement pst = conn.prepareStatement(sql)) {
            
            pst.setString(1, username);
            pst.setString(2, email);
            pst.setString(3, phone);
            
            ResultSet rs = pst.executeQuery();
            
            if (rs.next()) {
                // Tạo mật khẩu mới
                String newPassword = generateRandomPassword();
    
                
                // Gửi email
                boolean emailSent = EmailService.sendPasswordResetEmail(email, username, newPassword);
                if (!emailSent) {
                    throw new SQLException("Không thể gửi email");
                }
                
                // Cập nhật mật khẩu mới vào DB
                String updateSql = "UPDATE user SET password = ? WHERE username = ?";
                try (PreparedStatement updatePst = conn.prepareStatement(updateSql)) {
                    updatePst.setString(1, hashedPassword);
                    updatePst.setString(2, username);
                    updatePst.executeUpdate();
                    
                    // Ghi log
                    ghiLogDoiMatKhau(username);
                    
                    return newPassword;
                }
            }
            return null;
            
        } catch (SQLException e) {
            e.printStackTrace();
            return null;
        }
    }
    
    private void ghiLogDoiMatKhau(String username) {
        String sql = "INSERT INTO password_reset_log (username, reset_time, status, reset_method) VALUES (?, NOW(), 'SUCCESS', 'EMAIL')";
        try (Connection conn = myConnection.connect();
             PreparedStatement pst = conn.prepareStatement(sql)) {
            
            pst.setString(1, username);
            pst.executeUpdate();
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}