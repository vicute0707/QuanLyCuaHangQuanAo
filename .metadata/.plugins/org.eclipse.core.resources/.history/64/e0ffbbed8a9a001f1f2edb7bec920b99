package test;

import java.awt.CardLayout;
import java.awt.*;

import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.geom.RoundRectangle2D;

import javax.swing.*;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

public class FashionSystem extends JFrame {

	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private CardLayout cardLayout;
    private JPanel mainPanel;
    private static final Color PRIMARY_COLOR = new Color(219, 39, 119); // pink-600
    private static final Color BACKGROUND_COLOR = new Color(253, 242, 248); // pink-50
    private static final Color WHITE = new Color(255, 255, 255);

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FashionSystem frame = new FashionSystem();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FashionSystem() {
		setTitle("Fashion Management System");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setPreferredSize(new Dimension(1000, 600));
        
        cardLayout = new CardLayout();
        mainPanel = new JPanel(cardLayout);
        
        // Add different panels
        mainPanel.add(createLoginPanel(), "login");
        mainPanel.add(createRegisterPanel(), "register");
        mainPanel.add(createProductPanel(), "product");
        
        add(mainPanel);
        pack();
        setLocationRelativeTo(null);
        
        // Start with login panel
        cardLayout.show(mainPanel, "login");
	}
	 private JPanel createLoginPanel() {
	        JPanel loginPanel = new JPanel(new GridBagLayout());
	        loginPanel.setBackground(BACKGROUND_COLOR);
	        
	        // Create login form panel
	        JPanel formPanel = new JPanel(new GridBagLayout()) {
	            @Override
	            protected void paintComponent(Graphics g) {
	                super.paintComponent(g);
	                Graphics2D g2d = (Graphics2D) g;
	                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
	                g2d.setColor(WHITE);
	                g2d.fill(new RoundRectangle2D.Float(0, 0, getWidth(), getHeight(), 20, 20));
	            }
	        };
	        formPanel.setOpaque(false);
	        formPanel.setBorder(new EmptyBorder(30, 40, 30, 40));
	        formPanel.setPreferredSize(new Dimension(400, 450));
	        
	        GridBagConstraints gbc = new GridBagConstraints();
	        gbc.gridwidth = GridBagConstraints.REMAINDER;
	        gbc.fill = GridBagConstraints.HORIZONTAL;
	        gbc.insets = new Insets(5, 0, 15, 0);
	        
	        // Logo/Title
	        JLabel titleLabel = new JLabel("Đăng nhập");
	        titleLabel.setFont(new Font("Arial", Font.BOLD, 24));
	        titleLabel.setForeground(PRIMARY_COLOR);
	        titleLabel.setHorizontalAlignment(SwingConstants.CENTER);
	        formPanel.add(titleLabel, gbc);
	        
	        // Username
	        JLabel userLabel = new JLabel("Tên đăng nhập");
	        userLabel.setForeground(new Color(107, 114, 128));
	        formPanel.add(userLabel, gbc);
	        
	        JTextField userField = createStyledTextField();
	        formPanel.add(userField, gbc);
	        
	        // Password
	        JLabel passLabel = new JLabel("Mật khẩu");
	        passLabel.setForeground(new Color(107, 114, 128));
	        formPanel.add(passLabel, gbc);
	        
	        JPasswordField passField = createStyledPasswordField();
	        formPanel.add(passField, gbc);
	        
	        // Login Button
	        JButton loginButton = createStyledButton("Đăng nhập");
	        loginButton.addActionListener(e -> cardLayout.show(mainPanel, "product"));
	        gbc.insets = new Insets(20, 0, 10, 0);
	        formPanel.add(loginButton, gbc);
	        
	        // Register Link
	        JPanel linkPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
	        linkPanel.setOpaque(false);
	        JLabel registerLabel = new JLabel("Chưa có tài khoản? ");
	        JLabel registerLink = new JLabel("Đăng ký ngay");
	        registerLink.setForeground(PRIMARY_COLOR);
	        registerLink.setCursor(new Cursor(Cursor.HAND_CURSOR));
	        registerLink.addMouseListener(new MouseAdapter() {
	            @Override
	            public void mouseClicked(MouseEvent e) {
	                cardLayout.show(mainPanel, "register");
	            }
	        });
	        linkPanel.add(registerLabel);
	        linkPanel.add(registerLink);
	        formPanel.add(linkPanel, gbc);
	        
	        loginPanel.add(formPanel);
	        return loginPanel;
	    }
	    
	    private JPanel createRegisterPanel() {
	        JPanel registerPanel = new JPanel(new GridBagLayout());
	        registerPanel.setBackground(BACKGROUND_COLOR);
	        
	        JPanel formPanel = new JPanel(new GridBagLayout()) {
	            @Override
	            protected void paintComponent(Graphics g) {
	                super.paintComponent(g);
	                Graphics2D g2d = (Graphics2D) g;
	                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
	                g2d.setColor(WHITE);
	                g2d.fill(new RoundRectangle2D.Float(0, 0, getWidth(), getHeight(), 20, 20));
	            }
	        };
	        formPanel.setOpaque(false);
	        formPanel.setBorder(new EmptyBorder(30, 40, 30, 40));
	        formPanel.setPreferredSize(new Dimension(400, 550));
	        
	        GridBagConstraints gbc = new GridBagConstraints();
	        gbc.gridwidth = GridBagConstraints.REMAINDER;
	        gbc.fill = GridBagConstraints.HORIZONTAL;
	        gbc.insets = new Insets(5, 0, 15, 0);
	        
	        // Title
	        JLabel titleLabel = new JLabel("Đăng ký tài khoản");
	        titleLabel.setFont(new Font("Arial", Font.BOLD, 24));
	        titleLabel.setForeground(PRIMARY_COLOR);
	        titleLabel.setHorizontalAlignment(SwingConstants.CENTER);
	        formPanel.add(titleLabel, gbc);
	        
	        // Full Name
	        formPanel.add(new JLabel("Họ và tên"), gbc);
	        formPanel.add(createStyledTextField(), gbc);
	        
	        // Email
	        formPanel.add(new JLabel("Email"), gbc);
	        formPanel.add(createStyledTextField(), gbc);
	        
	        // Username
	        formPanel.add(new JLabel("Tên đăng nhập"), gbc);
	        formPanel.add(createStyledTextField(), gbc);
	        
	        // Password
	        formPanel.add(new JLabel("Mật khẩu"), gbc);
	        formPanel.add(createStyledPasswordField(), gbc);
	        
	        // Confirm Password
	        formPanel.add(new JLabel("Xác nhận mật khẩu"), gbc);
	        formPanel.add(createStyledPasswordField(), gbc);
	        
	        // Register Button
	        JButton registerButton = createStyledButton("Đăng ký");
	        gbc.insets = new Insets(20, 0, 10, 0);
	        formPanel.add(registerButton, gbc);
	        
	        // Login Link
	        JPanel linkPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
	        linkPanel.setOpaque(false);
	        JLabel loginLabel = new JLabel("Đã có tài khoản? ");
	        JLabel loginLink = new JLabel("Đăng nhập");
	        loginLink.setForeground(PRIMARY_COLOR);
	        loginLink.setCursor(new Cursor(Cursor.HAND_CURSOR));
	        loginLink.addMouseListener(new MouseAdapter() {
	            @Override
	            public void mouseClicked(MouseEvent e) {
	                cardLayout.show(mainPanel, "login");
	            }
	        });
	        linkPanel.add(loginLabel);
	        linkPanel.add(loginLink);
	        formPanel.add(linkPanel, gbc);
	        
	        registerPanel.add(formPanel);
	        return registerPanel;
	    }
	    
	    private JPanel createProductPanel() {
	        JPanel productPanel = new JPanel(new BorderLayout(10, 10));
	        productPanel.setBackground(BACKGROUND_COLOR);
	        productPanel.setBorder(new EmptyBorder(20, 20, 20, 20));
	        
	        // Top Panel with Title and Add Button
	        JPanel topPanel = new JPanel(new BorderLayout());
	        topPanel.setBackground(WHITE);
	        topPanel.setBorder(BorderFactory.createCompoundBorder(
	            BorderFactory.createLineBorder(new Color(229, 231, 235)),
	            new EmptyBorder(15, 15, 15, 15)
	        ));
	        
	        JLabel titleLabel = new JLabel("Quản lý sản phẩm");
	        titleLabel.setFont(new Font("Arial", Font.BOLD, 20));
	        
	        JButton addButton = createStyledButton("Thêm sản phẩm mới");
	        addButton.setPreferredSize(new Dimension(150, 35));
	        
	        topPanel.add(titleLabel, BorderLayout.WEST);
	        topPanel.add(addButton, BorderLayout.EAST);
	        
	        // Product Form Panel
	        JPanel formPanel = new JPanel(new GridLayout(3, 2, 10, 10));
	        formPanel.setBackground(WHITE);
	        formPanel.setBorder(BorderFactory.createCompoundBorder(
	            BorderFactory.createLineBorder(new Color(229, 231, 235)),
	            new EmptyBorder(15, 15, 15, 15)
	        ));
	        
	        formPanel.add(new JLabel("Mã sản phẩm:"));
	        formPanel.add(createStyledTextField());
	        formPanel.add(new JLabel("Tên sản phẩm:"));
	        formPanel.add(createStyledTextField());
	        formPanel.add(new JLabel("Giá:"));
	        formPanel.add(createStyledTextField());
	        
	        // Table
	        String[] columns = {"Mã SP", "Tên sản phẩm", "Giá", "Số lượng", "Trạng thái"};
	        Object[][] data = {
	            {"SP001", "Áo sơ mi trắng", "350.000đ", "50", "Còn hàng"},
	            {"SP002", "Quần jean nam", "450.000đ", "30", "Còn hàng"},
	            {"SP003", "Đầm hoa nữ", "550.000đ", "20", "Sắp hết"},
	        };
	        
	        DefaultTableModel model = new DefaultTableModel(data, columns);
	        JTable table = new JTable(model);
	        table.setRowHeight(35);
	        table.setShowGrid(false);
	        table.setIntercellSpacing(new Dimension(0, 0));
	        
	        JScrollPane scrollPane = new JScrollPane(table);
	        scrollPane.setBorder(BorderFactory.createLineBorder(new Color(229, 231, 235)));
	        
	        // Layout
	        JPanel centerPanel = new JPanel(new BorderLayout(0, 10));
	        centerPanel.setOpaque(false);
	        centerPanel.add(formPanel, BorderLayout.NORTH);
	        centerPanel.add(scrollPane, BorderLayout.CENTER);
	        
	        productPanel.add(topPanel, BorderLayout.NORTH);
	        productPanel.add(centerPanel, BorderLayout.CENTER);
	        
	        return productPanel;
	    }
	    
	    private JTextField createStyledTextField() {
	        JTextField field = new JTextField();
	        field.setPreferredSize(new Dimension(0, 35));
	        field.setBorder(BorderFactory.createCompoundBorder(
	            BorderFactory.createLineBorder(new Color(229, 231, 235)),
	            BorderFactory.createEmptyBorder(5, 10, 5, 10)
	        ));
	        return field;
	    }
	    
	    private JPasswordField createStyledPasswordField() {
	        JPasswordField field = new JPasswordField();
	        field.setPreferredSize(new Dimension(0, 35));
	        field.setBorder(BorderFactory.createCompoundBorder(
	            BorderFactory.createLineBorder(new Color(229, 231, 235)),
	            BorderFactory.createEmptyBorder(5, 10, 5, 10)
	        ));
	        return field;
	    }
	    
	    private JButton createStyledButton(String text) {
	        JButton button = new JButton(text) {
	            @Override
	            protected void paintComponent(Graphics g) {
	                Graphics2D g2 = (Graphics2D) g.create();
	                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
	                if (getModel().isPressed()) {
	                    g2.setColor(PRIMARY_COLOR.darker());
	                } else {
	                    g2.setColor(PRIMARY_COLOR);
	                }
	                g2.fill(new RoundRectangle2D.Float(0, 0, getWidth(), getHeight(), 10, 10));
	                g2.dispose();
	                
	                super.paintComponent(g);
	            }
	        };
	        
	        button.setForeground(WHITE);
	        button.setFont(new Font("Arial", Font.BOLD, 14));
	        button.setContentAreaFilled(false);
	        button.setBorderPainted(false);
	        button.setFocusPainted(false);
	        button.setPreferredSize(new Dimension(0, 40));
	        button.setCursor(new Cursor(Cursor.HAND_CURSOR));
	        
	        return button;
	    }
	    
}
