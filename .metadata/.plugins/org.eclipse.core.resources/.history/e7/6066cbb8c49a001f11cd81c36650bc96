package test;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Image;
import java.awt.MediaTracker;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.geom.RoundRectangle2D;

import javax.swing.*;
import javax.swing.border.EmptyBorder;

import com.formdev.flatlaf.fonts.roboto.FlatRobotoFont;

public class GiaoDienChinh extends JFrame {

	private static final long serialVersionUID = 1L;
    private static final Color PRIMARY_COLOR = new Color(219, 39, 119);
    private static final Color HOVER_COLOR = new Color(190, 24, 93);
    private static final Color LINK_HOVER_COLOR = new Color(236, 72, 153);
    private static final Color CARD_1_COLOR = new Color(251, 207, 232); // pink-200
    private static final Color CARD_2_COLOR = new Color(249, 168, 212); // pink-300
    private static final Color CARD_3_COLOR = new Color(244, 114, 182); // pink-400
    private static final Color CARD_4_COLOR = new Color(236, 72, 153);  // pink-500
    private static final Color CARD_TEXT_COLOR = new Color(131, 24, 67); // pink-900

    private JPanel panelCenter;
    private JPanel homePanel;
    private JButton currentButton;
    private static final Font MENU_FONT = new Font(FlatRobotoFont.FAMILY, Font.PLAIN, 13);
    private static final Font CARD_TITLE_FONT = new Font(FlatRobotoFont.FAMILY, Font.BOLD, 16);
    private static final Font CARD_NUMBER_FONT = new Font(FlatRobotoFont.FAMILY, Font.BOLD, 24);
    private static final Font CARD_LABEL_FONT = new Font(FlatRobotoFont.FAMILY, Font.PLAIN, 14);
    private static final int BANNER_WIDTH = 1000;
    private static final int BANNER_HEIGHT = 300;

    public static void main(String[] args) {
        EventQueue.invokeLater(() -> {
            try {
                GiaoDienChinh frame = new GiaoDienChinh();
                frame.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    public GiaoDienChinh() {
        setSize(new Dimension(1400, 700));
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        JPanel mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout());
        mainPanel.setBackground(Color.WHITE);

        // North Panel (Header)
        JPanel panelNorth = createHeaderPanel();
        mainPanel.add(panelNorth, BorderLayout.NORTH);

        // Center Panel
        panelCenter = new JPanel();
        panelCenter.setBackground(Color.WHITE);
        
        // Initialize and show home panel
        homePanel = createHomePanel();
        showPanel(homePanel);
        
        mainPanel.add(panelCenter, BorderLayout.CENTER);
        setContentPane(mainPanel);
        setVisible(true);
    }

    private JPanel createHeaderPanel() {
        JPanel panelNorth = new JPanel();
        panelNorth.setLayout(new BoxLayout(panelNorth, BoxLayout.Y_AXIS));
        panelNorth.setBackground(Color.WHITE);

        // Title Panel
        JPanel pnlTieuDe = new JPanel(new BorderLayout());
        pnlTieuDe.setBackground(Color.WHITE);
        
        JLabel lblLogo = new JLabel("   WOMEN FASHION");
        lblLogo.setFont(new Font(FlatRobotoFont.FAMILY, Font.BOLD, 12));
        lblLogo.setForeground(PRIMARY_COLOR);
        
        JLabel lblUser = new JLabel("Hi, User               ");
        lblUser.setIcon(new ImageIcon(GiaoDienChinh.class.getResource("/icon/circle-user.png")));
        lblUser.setFont(new Font(FlatRobotoFont.FAMILY, Font.PLAIN, 13));
        lblUser.setHorizontalAlignment(SwingConstants.RIGHT);

        pnlTieuDe.add(lblLogo, BorderLayout.WEST);
        pnlTieuDe.add(lblUser, BorderLayout.EAST);

        // Menu Panel
        JPanel pnlJMenu = new JPanel();
        pnlJMenu.setLayout(new FlowLayout(FlowLayout.CENTER, 20, 5));
        pnlJMenu.setBackground(Color.WHITE);

        String[] menuItems = {"Trang chủ", "Sản phẩm", "Nhập hàng", "Xuất hàng", "Danh mục", "Nhà cung cấp", "Nhân viên", "Thống kê"};
        for (String item : menuItems) {
            pnlJMenu.add(createMenuButton(item));
        }

        panelNorth.add(pnlTieuDe);
        panelNorth.add(pnlJMenu);
        return panelNorth;
    }

    private JPanel createHomePanel() {
        JPanel panel = new JPanel();
        panel.setBackground(Color.WHITE);
        
        // Container for banner with padding
        JPanel bannerContainer = new JPanel(new BorderLayout());
        bannerContainer.setBackground(Color.WHITE);
        bannerContainer.setBorder(new EmptyBorder(20, 20, 20, 20));

        // Banner panel with rounded corners
        JPanel bannerPanel = new JPanel(new BorderLayout()) {
            @Override
            protected void paintComponent(java.awt.Graphics g) {
                super.paintComponent(g);
                java.awt.Graphics2D g2d = (java.awt.Graphics2D) g;
                g2d.setRenderingHint(java.awt.RenderingHints.KEY_ANTIALIASING, 
                                   java.awt.RenderingHints.VALUE_ANTIALIAS_ON);
                g2d.setColor(new Color(253, 242, 248));
                g2d.fill(new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), 20, 20));
            }
        };
        bannerPanel.setPreferredSize(new Dimension(1200, 300));
        bannerPanel.setOpaque(false);

        // Create banner images
        JLabel[] bannerImages = new JLabel[3];
        String[] imagePaths = {
            "/icon/banner1.png",
            "/icon/banner2.png",
            "/icon/banner3.png"
        };

        for (int i = 0; i < bannerImages.length; i++) {
            ImageIcon icon = new ImageIcon(GiaoDienChinh.class.getResource(imagePaths[i]));
            if (icon.getImageLoadStatus() == MediaTracker.COMPLETE) {
                Image scaledImage = icon.getImage().getScaledInstance(
                    BANNER_WIDTH, BANNER_HEIGHT, Image.SCALE_SMOOTH);
                bannerImages[i] = new JLabel(new ImageIcon(scaledImage));
            } else {
                // Fallback if image not found
                bannerImages[i] = new JLabel("Banner " + (i + 1));
                bannerImages[i].setHorizontalAlignment(SwingConstants.CENTER);
                bannerImages[i].setFont(new Font(FlatRobotoFont.FAMILY, Font.BOLD, 36));
                bannerImages[i].setForeground(PRIMARY_COLOR);
            }
            bannerImages[i].setPreferredSize(new Dimension(BANNER_WIDTH, BANNER_HEIGHT));
        }
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        // Setup rotating banner
        rotatingBanner(bannerPanel, bannerImages, 3000);

        // Center the banner panel
        JPanel centeringPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
        centeringPanel.setBackground(Color.WHITE);
        centeringPanel.add(bannerPanel);
        
        bannerContainer.add(centeringPanel, BorderLayout.CENTER);
        panel.add(bannerContainer);
        JPanel dashboardContainer = new JPanel(new FlowLayout(FlowLayout.CENTER, 30, 20));
        dashboardContainer.setBackground(Color.WHITE);
        dashboardContainer.setBorder(new EmptyBorder(0, 20, 20, 20));
        
        // Add dashboard cards
        dashboardContainer.add(createDashboardCard("Nhân viên", "150", "Đang làm việc", CARD_1_COLOR, "/icon/users.png"));
        dashboardContainer.add(createDashboardCard("Sản phẩm", "1,234", "Trong kho", CARD_2_COLOR, "/icon/shirt.png"));
        dashboardContainer.add(createDashboardCard("Nhà cung cấp", "45", "Đang hợp tác", CARD_3_COLOR, "/icon/container.png"));
        dashboardContainer.add(createDashboardCard("Doanh thu", "5.6M", "Tháng này", CARD_4_COLOR, "/icon/chart-no-axes-combined.png"));

        // Add components to main panel
        panel.add(bannerContainer);
        panel.add(dashboardContainer);

        return panel;
    }
    private JPanel createDashboardCard(String title, String number, String label, Color backgroundColor, String iconPath) {
        JPanel card = new JPanel() {
            @Override
            protected void paintComponent(java.awt.Graphics g) {
                super.paintComponent(g);
                java.awt.Graphics2D g2d = (java.awt.Graphics2D) g;
                g2d.setRenderingHint(java.awt.RenderingHints.KEY_ANTIALIASING, 
                                   java.awt.RenderingHints.VALUE_ANTIALIAS_ON);
                g2d.setColor(backgroundColor);
                g2d.fill(new RoundRectangle2D.Double(0, 0, getWidth() - 1, getHeight() - 1, 20, 20));
            }
        };
        card.setPreferredSize(new Dimension(250, 120));
        card.setLayout(new BorderLayout(10, 5));
        card.setBorder(BorderFactory.createEmptyBorder(15, 20, 15, 20));
        card.setOpaque(false);

        // Icon and Title Panel
        JPanel topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 10, 0));
        topPanel.setOpaque(false);

        if (iconPath != null) {
            ImageIcon originalIcon = new ImageIcon(GiaoDienChinh.class.getResource(iconPath));
            Image scaledImage = originalIcon.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
            JLabel iconLabel = new JLabel(new ImageIcon(scaledImage));
            topPanel.add(iconLabel);
        }

        JLabel titleLabel = new JLabel(title);
        titleLabel.setFont(CARD_TITLE_FONT);
        titleLabel.setForeground(CARD_TEXT_COLOR);
        topPanel.add(titleLabel);

        // Number and Label Panel
        JPanel contentPanel = new JPanel();
        contentPanel.setLayout(new BoxLayout(contentPanel, BoxLayout.Y_AXIS));
        contentPanel.setOpaque(false);

        JLabel numberLabel = new JLabel(number);
        numberLabel.setFont(CARD_NUMBER_FONT);
        numberLabel.setForeground(CARD_TEXT_COLOR);
        numberLabel.setAlignmentX(Component.LEFT_ALIGNMENT);

        JLabel descLabel = new JLabel(label);
        descLabel.setFont(CARD_LABEL_FONT);
        descLabel.setForeground(CARD_TEXT_COLOR);
        descLabel.setAlignmentX(Component.LEFT_ALIGNMENT);

        contentPanel.add(Box.createVerticalStrut(5));
        contentPanel.add(numberLabel);
        contentPanel.add(Box.createVerticalStrut(3));
        contentPanel.add(descLabel);

        card.add(topPanel, BorderLayout.NORTH);
        card.add(contentPanel, BorderLayout.CENTER);

        return card;
    }

    private JButton createMenuButton(String text) {
        JButton button = new JButton(text);
        button.setFont(MENU_FONT);
        button.setForeground(new Color(75, 85, 99));
        button.setBackground(Color.WHITE);
        button.setBorderPainted(false);
        button.setFocusPainted(false);
        button.setContentAreaFilled(false);
        button.setCursor(new Cursor(Cursor.HAND_CURSOR));
        button.setPreferredSize(new Dimension(140, 30));

        button.addActionListener(e -> {
            if (currentButton != null) {
                currentButton.setForeground(new Color(75, 85, 99));
                currentButton.setBackground(Color.WHITE);
            }
            
            currentButton = button;
            button.setForeground(PRIMARY_COLOR);
            button.setBackground(new Color(253, 242, 248));

            if (text.equals("Trang chủ")) {
                showPanel(homePanel);
            } else {
                showPanel(new JPanel());
            }
        });

        // Hover effects
        button.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                if (button != currentButton) {
                    button.setForeground(PRIMARY_COLOR);
                    button.setBackground(new Color(253, 242, 248));
                }
            }

            @Override
            public void mouseExited(MouseEvent e) {
                if (button != currentButton) {
                    button.setForeground(new Color(75, 85, 99));
                    button.setBackground(Color.WHITE);
                }
            }
        });

        // Add icons
        String iconPath = switch (text) {
            case "Trang chủ" -> "/icon/house.png";
            case "Sản phẩm" -> "/icon/shirt.png";
            case "Nhập hàng" -> "/icon/folder-input.png";
            case "Xuất hàng" -> "/icon/folder-output.png";
            case "Danh mục" -> "/icon/chart-column-stacked.png";
            case "Nhà cung cấp" -> "/icon/container.png";
            case "Nhân viên" -> "/icon/users.png";
            case "Thống kê" -> "/icon/chart-no-axes-combined.png";
            default -> null;
        };
        
        if (iconPath != null) {
            button.setIcon(new ImageIcon(GiaoDienChinh.class.getResource(iconPath)));
        }

        return button;
    }

    private void showPanel(JPanel panel) {
        panelCenter.removeAll();
        panelCenter.setLayout(new BoxLayout(panelCenter, BoxLayout.X_AXIS));
        panelCenter.add(panel);
        panelCenter.revalidate();
        panelCenter.repaint();
    }

    private void rotatingBanner(JPanel bannerPanel, JLabel[] bannerImages, int delay) {
        Timer timer = new Timer(delay, null);
        final int[] currentIndex = {0};
        
        timer.addActionListener(e -> {
            bannerPanel.removeAll();
            bannerPanel.add(bannerImages[currentIndex[0]], BorderLayout.CENTER);
            bannerPanel.revalidate();
            bannerPanel.repaint();
            currentIndex[0] = (currentIndex[0] + 1) % bannerImages.length;
        });
        
        timer.start();
    }
}